name: Release Build

on:
  release:
    types: [created]

env:
  FLUTTER_VERSION: '3.29.0'
  PUB_CACHE: ~/.pub-cache

jobs:
  build:
    name: Build Release APK
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
      
      # Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      # Accept Android SDK licenses
      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses
      
      # Configure Gradle
      - name: Configure Gradle
        run: |
          echo "org.gradle.java.home=$(which java | xargs readlink -f | sed 's/\/bin\/java//')" >> android/gradle.properties
      
      # Set JAVA_HOME for Gradle
      - name: Set JAVA_HOME
        run: |
          echo "JAVA_HOME=$JAVA_HOME_17_X64" >> $GITHUB_ENV
      
      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            ${{ env.PUB_CACHE }}
            .dart_tool
            build
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-
            ${{ runner.os }}-flutter-
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
        
      - name: Create firebase_options.dart
        run: |
          echo "${{ secrets.FIREBASE_OPTIONS }}" | base64 --decode > lib/firebase_options.dart
        
      - name: Create app_config.dart
        run: |
          cat > lib/config/app_config.dart << 'EOL'
          class AppConfig {
            static const String googleMapsApiKey = '${{ secrets.PROD_MAPS_API_KEY }}';
          }
          EOL

      - name: Create strings.xml with Maps API Key
        run: |
          mkdir -p android/app/src/main/res/values
          cat > android/app/src/main/res/values/strings.xml << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="maps_api_key">${{ secrets.PROD_MAPS_API_KEY }}</string>
          </resources>
          EOL

      - name: Setup Firebase Configuration
        run: |
          echo "${{ secrets.PROD_FIREBASE_CONFIG }}" | base64 --decode > android/app/google-services-prod.json
          cp android/app/google-services-prod.json android/app/google-services.json
      
      - name: Setup Keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 --decode > android/app/release.jks
          
          cat > android/key.properties << EOF
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=release.jks
          EOF
      
      - name: Analyze project source
        run: flutter analyze --no-fatal-infos
        
      - name: Build Release APK
        run: flutter build apk --release --build-name=${GITHUB_REF#refs/tags/} --build-number=${{ github.run_number }}
      
      - name: Upload Release APK to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30
          
      - name: Upload to Release
        uses: softprops/action-gh-release@v2
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          name: Release ${GITHUB_REF#refs/tags/}
          body: |
            Coffee Mapper Android Release ${GITHUB_REF#refs/tags/}
            
            This is an automated release build of Coffee Mapper Android.
            
            **Version:** ${GITHUB_REF#refs/tags/}
            **Build Number:** ${{ github.run_number }}
            
            Please download the APK and test thoroughly before distribution. 