name: Development Build

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '.github/ISSUE_TEMPLATE/**'
      - 'LICENSE'
  workflow_dispatch:

env:
  FLUTTER_VERSION: '3.29.0'
  PUB_CACHE: ~/.pub-cache

jobs:
  build:
    name: Build Debug APK
    runs-on: ubuntu-latest
    environment: development
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'
      
      # Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      # Accept Android SDK licenses
      - name: Accept Android SDK licenses
        run: yes | sdkmanager --licenses
      
      # Configure Gradle
      - name: Configure Gradle
        run: |
          echo "org.gradle.java.home=$(which java | xargs readlink -f | sed 's/\/bin\/java//')" >> android/gradle.properties
      
      # Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ runner.tool_cache }}/flutter
            ${{ env.PUB_CACHE }}
            .dart_tool
            build
          key: ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-${{ env.FLUTTER_VERSION }}-
            ${{ runner.os }}-flutter-
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
        
      - name: Create firebase_options.dart
        run: |
          echo "${{ secrets.FIREBASE_OPTIONS }}" | base64 --decode > lib/firebase_options.dart
        
      - name: Create app_config.dart
        run: |
          cat > lib/config/app_config.dart << 'EOL'
          class AppConfig {
            static const String googleMapsApiKey = '${{ secrets.DEV_MAPS_API_KEY }}';
          }
          EOL

      - name: Create strings.xml with Maps API Key
        run: |
          mkdir -p android/app/src/main/res/values
          cat > android/app/src/main/res/values/strings.xml << 'EOL'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
              <string name="maps_api_key">${{ secrets.DEV_MAPS_API_KEY }}</string>
          </resources>
          EOL

      - name: Setup Firebase Configuration
        run: |
          echo "${{ secrets.DEV_FIREBASE_CONFIG }}" | base64 --decode > android/app/google-services-dev.json
          cp android/app/google-services-dev.json android/app/google-services.json
      
      # Create debug keystore
      - name: Create debug keystore
        run: |
          mkdir -p ~/.android
          keytool -genkeypair \
            -keystore ~/.android/debug.keystore \
            -storepass android \
            -keypass android \
            -alias androiddebugkey \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=Android Debug,O=Android,C=US" \
            -v
      
      - name: Analyze project source
        run: flutter analyze --no-fatal-infos
        
      - name: Build Debug APK
        run: flutter build apk --debug --build-name=1.0.0 --build-number=${{ github.run_number }}
      
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk
          retention-days: 7
          
      # Create/Update Debug Release
      - name: Delete old debug release
        uses: dev-drprasad/delete-tag-and-release@v1.0
        with:
          tag_name: debug-latest
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
        continue-on-error: true
        
      - name: Create Debug Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/app/outputs/flutter-apk/app-debug.apk
          name: "Latest Debug Build"
          tag_name: debug-latest
          prerelease: true
          body: |
            This is the latest debug build of Coffee Mapper Android.
            
            **Build Number:** ${{ github.run_number }}
            **Commit:** ${{ github.sha }}
            **Branch:** ${{ github.ref_name }}
            
            ⚠️ This is a development build and should be used for testing purposes only.
            
            _Last updated: $(date +'%Y-%m-%d %H:%M:%S')_ 